<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:MahApps.Metro.Behaviors;assembly=MahApps.Metro"
    xmlns:conv="clr-namespace:FluorescenceFullAutomatic.Platform.Converters"
    xmlns:converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">
    <!--  region converter  -->
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <conv:StringToDefaultConverter x:Key="StringToDefaultConverter" />
    <conv:SafePatientPropertyConverter x:Key="SafePatientPropertyConverter" />
    <conv:ItemIndexToCornerRadiusConverter x:Key="ItemIndexToCornerRadiusConverter" />
    <!--  endregion  -->

    <!--  region SolidColorBrush  -->
    <SolidColorBrush x:Key="Primary" Color="#607d8b" />
    <SolidColorBrush x:Key="Secondary" Color="#607d8b" />
    <SolidColorBrush x:Key="White" Color="#ffffff" />
    <SolidColorBrush x:Key="LigtWhite" Color="#f5f5f5" />
    <SolidColorBrush x:Key="TextColor" Color="#333333" />
    <SolidColorBrush x:Key="ListItemNormalBackground" Color="#eceff1" />
    <SolidColorBrush x:Key="ListItemNormalForeground" Color="#FF333333" />
    <SolidColorBrush x:Key="ListItemSelectedBackground" Color="#607d8b" />
    <SolidColorBrush x:Key="ListItemSelectedBackground2" Color="#aa607d8b" />
    <SolidColorBrush x:Key="ListItemSelectedForeground" Color="White" />
    <!--  endregion  -->

    <!--  region style  -->
    <Style x:Key="InputControlStyle" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="#F5F5F5" />
        <Setter Property="BorderBrush" Value="#E0E0E0" />
        <Setter Property="BorderThickness" Value="1" />

    </Style>
    <!--  TextBox默认Style 灰色背景和边框  -->
    <Style
        x:Key="TextBoxDefaultStyle"
        BasedOn="{StaticResource InputControlStyle}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="5,0,5,0"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  ComboBox默认Style 灰色背景和边框  -->
    <Style BasedOn="{StaticResource InputControlStyle}" TargetType="{x:Type ComboBox}">
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <!--  用于包装TextBlock的Border样式，提供灰色背景和边框  -->
    <Style x:Key="TextBlockBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#F5F5F5" />
        <Setter Property="BorderBrush" Value="#E0E0E0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <!--  TextBlock默认Style  -->
    <Style x:Key="TextBlockInBorderDefaultStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,3,5,3" />
    </Style>

    <Style
        x:Key="Button.Base"
        BasedOn="{StaticResource MahApps.Styles.Button}"
        TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FontSize" Value="16" />
    </Style>
    <!--  Button 背景与主题色一样 Style  -->
    <Style
        x:Key="Button.Accent"
        BasedOn="{StaticResource Button.Base}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Primary}" />
        <Setter Property="Foreground" Value="{DynamicResource White}" />
    </Style>
    <!--  Button 背景是默认的灰白色 Style  -->
    <Style
        x:Key="Button.Default"
        BasedOn="{StaticResource Button.Base}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource LigtWhite}" />
        <Setter Property="Foreground" Value="{DynamicResource TextColor}" />
    </Style>
    <!--  Button 背景与主题色一样 Style  -->
    <Style
        x:Key="Button.Secondary"
        BasedOn="{StaticResource Button.Base}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Primary}" />
        <Setter Property="Foreground" Value="{DynamicResource White}" />
    </Style>
    <Style x:Key="TopHeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>
    <Style x:Key="ListBox.Default" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
        <!--  设置项目面板为水平方向  -->
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="10">
                        <ScrollViewer Padding="{TemplateBinding Padding}" Focusable="False">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <Grid MinHeight="60" Margin="10,0">
                        <Grid.InputBindings>
                            <MouseBinding
                                Command="{Binding DataContext.NavCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                CommandParameter="{Binding Index}"
                                MouseAction="LeftClick" />
                        </Grid.InputBindings>
                        <TextBlock
                            Grid.Row="1"
                            Style="{StaticResource TopHeaderStyle}"
                            Text="{Binding Header}" />
                    </Grid>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ListBoxItem.Default" TargetType="{x:Type ListBoxItem}">
        <Setter Property="Background" Value="{StaticResource ListItemNormalBackground}" />
        <Setter Property="Foreground" Value="{StaticResource ListItemNormalForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="LightGray" />
        <Setter Property="Padding" Value="15,2" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="0,0,0,0" />
        <Setter Property="MinWidth" Value="150" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <DockPanel>
                        <!--  内容区域  -->
                        <Border
                            x:Name="MainBorder"
                            Grid.RowSpan="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <Border.CornerRadius>
                                <MultiBinding Converter="{StaticResource ItemIndexToCornerRadiusConverter}">
                                    <Binding RelativeSource="{RelativeSource AncestorType=ListBoxItem}" />
                                    <Binding RelativeSource="{RelativeSource AncestorType=ListBox}" />
                                </MultiBinding>
                            </Border.CornerRadius>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        </Border>
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <!--  选中状态  -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ListItemSelectedForeground}" />
                            <Setter Property="Background" Value="{StaticResource ListItemSelectedBackground}" />

                        </Trigger>
                        <!--  鼠标悬停  -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource ListItemSelectedForeground}" />
                            <Setter Property="Background" Value="{StaticResource ListItemSelectedBackground2}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  endregion  -->

</ResourceDictionary>