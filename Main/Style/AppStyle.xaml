<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behaviors="clr-namespace:MahApps.Metro.Behaviors;assembly=MahApps.Metro"
    xmlns:conv="clr-namespace:FluorescenceFullAutomatic.Converters"
    xmlns:converters="clr-namespace:MahApps.Metro.Converters;assembly=MahApps.Metro"
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro">
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <conv:StringToDefaultConverter x:Key="StringToDefaultConverter" />
    <conv:SafePatientPropertyConverter x:Key="SafePatientPropertyConverter" />

    <Style x:Key="InputControlStyle" TargetType="{x:Type Control}">
        <Setter Property="Background" Value="#F5F5F5" />
        <Setter Property="BorderBrush" Value="#E0E0E0" />
        <Setter Property="BorderThickness" Value="1" />

    </Style>
    <!--  TextBox默认Style 灰色背景和边框  -->
    <Style
        x:Key="TextBoxDefaultStyle"
        BasedOn="{StaticResource InputControlStyle}"
        TargetType="{x:Type TextBox}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        CornerRadius="4">
                        <ScrollViewer
                            x:Name="PART_ContentHost"
                            Margin="5,0,5,0"
                            VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--  ComboBox默认Style 灰色背景和边框  -->
    <Style BasedOn="{StaticResource InputControlStyle}" TargetType="{x:Type ComboBox}">
        <Setter Property="BorderThickness" Value="0" />
    </Style>

    <!--  用于包装TextBlock的Border样式，提供灰色背景和边框  -->
    <Style x:Key="TextBlockBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="#F5F5F5" />
        <Setter Property="BorderBrush" Value="#E0E0E0" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="CornerRadius" Value="4" />
        <Setter Property="HorizontalAlignment" Value="Left" />
    </Style>

    <!--  TextBlock默认Style  -->
    <Style x:Key="TextBlockInBorderDefaultStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="5,3,5,3" />
    </Style>

    <Style
        x:Key="Button.Base"
        BasedOn="{StaticResource MahApps.Styles.Button}"
        TargetType="{x:Type Button}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="10,5" />
        <Setter Property="Height" Value="40" />
        <Setter Property="FontSize" Value="16" />
    </Style>
    <!--  Button 背景与主题色一样 Style  -->
    <Style
        x:Key="Button.Accent"
        BasedOn="{StaticResource Button.Base}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.Accent}" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    </Style>
    <!--  Button 背景是默认的灰白色 Style  -->
    <Style
        x:Key="Button.Default"
        BasedOn="{StaticResource Button.Base}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#fefefe" />
        <Setter Property="Foreground" Value="Black" />
    </Style>
    <!--  Button 背景与主题色一样 Style  -->
    <Style
        x:Key="Button.Secondary"
        BasedOn="{StaticResource Button.Base}"
        TargetType="{x:Type Button}">
        <Setter Property="Background" Value="#46c56f" />
        <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.ThemeBackground}" />
    </Style>
</ResourceDictionary>